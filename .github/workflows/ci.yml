name: Build and Test CI Workflow

on: [push]

env:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 14
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '14'

      - name: Build Project with Maven
        run: mvn -B compile --file pom.xml

  verify:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 14
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '14'

      - name: Run Tests and Package Application
        run: mvn -B verify --file pom.xml

      - name: List JAR/WAR Files
        run: ls ${GITHUB_WORKSPACE}/target/*.jar

  verify-and-package:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 14
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '14'

      - name: Run Tests and Package Application
        run: mvn -B verify --file pom.xml

      - name: List JAR/WAR Files
        run: ls ${GITHUB_WORKSPACE}/target/*.jar
        
  deploy:
    needs: verify-and-package
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCLOUD_SA }}'

      - name: Get GKE Credentials
        id: get-credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: 'apsv-24'
          location: 'us-central1'

      - name: Create Kubernetes Docker Registry Secret
        run: |
          kubectl create secret docker-registry github-registry \
          --docker-server="ghcr.io" \
          --docker-username="ggoncalo02" \
          --docker-password="${{ secrets.PAT }}" \
          --docker-email="ggoncalo02@gmail.com" \
          -o yaml --dry-run=client | kubectl apply -f -

      - name: Apply Kubernetes Deployment
        run: kubectl apply -f src/main/java/es/upm/dit/apsv/deployment.yaml

      - name: Verify Kubernetes Deployment
        run: |
          kubectl get deployments
          kubectl get pods
